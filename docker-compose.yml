version: '2'
services:
  # 自定义服务名
  spring-cloud-eureka:
    # 总起重启
    restart: always
    # 别名
    container_name: spring-cloud-eureka
    # 编译DockerFile所在路径
    image: registry.cn-hangzhou.aliyuncs.com/ldbmcs/spring-cloud-eureka
    # 端口映射
    ports:
      - 7000:7000
    # 挂载目录
    volumes:
      - /home/spring-cloud-examples/spring-cloud-eureka/log:/app/log/
    # 网络桥接
    networks:
      - springCloud

  spring-cloud-config:
    restart: always
    container_name: spring-cloud-config
    image: registry.cn-hangzhou.aliyuncs.com/ldbmcs/spring-cloud-config
    ports:
      - 7001:7001
    networks:
      - springCloud
    volumes:
      - /home/spring-cloud-examples/spring-cloud-config/log:/app/log/
    # 等待某服务启动后启动服务
    depends_on:
      - spring-cloud-eureka
    links:
      - spring-cloud-eureka

  spring-cloud-zuul:
    restart: always
    container_name: spring-cloud-zuul
    image: registry.cn-hangzhou.aliyuncs.com/ldbmcs/spring-cloud-zuul
    ports:
      - 7002:7002
    networks:
      - springCloud
    volumes:
      - /home/spring-cloud-examples/spring-cloud-zuul/log:/app/log/
    depends_on:
      - spring-cloud-eureka
      - spring-cloud-config
    links:
      - spring-cloud-eureka
      - spring-cloud-config

  spring-cloud-consumer:
    restart: always
    container_name: spring-cloud-consumer
    image: registry.cn-hangzhou.aliyuncs.com/ldbmcs/spring-cloud-consumer
    ports:
      - 7011:7011
    networks:
      - springCloud
    volumes:
      - /home/spring-cloud-examples/spring-cloud-consumer/log:/app/log/
    depends_on:
      - spring-cloud-eureka
      - spring-cloud-config
    links:
      - spring-cloud-eureka
      - spring-cloud-config

  spring-cloud-producer:
    restart: always
    container_name: spring-cloud-producer
    image: registry.cn-hangzhou.aliyuncs.com/ldbmcs/spring-cloud-producer
    ports:
      - 7012:7012
    networks:
      - springCloud
    volumes:
      - /home/spring-cloud-examples/spring-cloud-producer/log:/app/log/
    depends_on:
      - spring-cloud-eureka
      - spring-cloud-config
    links:
      - spring-cloud-eureka
      - spring-cloud-config

# 构建网络环境
networks:
  springCloud:
    driver: bridge